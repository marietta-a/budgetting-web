# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '583fde95-2043-447c-ab5c-3d396d6e85ba'
  imageRepository: 'mariettaabudgettingweb'
  containerRegistry: 'budgettingweb.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'
  ## Add this under variables section in the pipeline
  azureSubscription: 'fed1d222-2e78-480b-ac7b-e87be0b17eeb'
  appName: 'maanjong-cosmetics'
  resourceGroupName: 'my-resources'

  # Agent VM image name 
  # vmImageName: 'ubuntu-latest' 
  vmImageName: 'GitHub-Codespaces'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
     name: $(vmImageName)
      # vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

    ## Add the below snippet at the end of your pipeline
    - task: AzureWebAppContainer@1
      displayName: 'Azure Web App on Container Deploy'
      inputs:
        azureSubscription: $(azureSubscription)
        appName: $(appName)
        containers: $(containerRegistry)/$(imageRepository):$(tag)
        deployToSlotOrASE: true
        resourceGroupName: 4(resourceGroupName)
        slotName: staging

    - task: AzureAppServiceManage@0
      inputs:
        azureSubscription: $(azureSubscription)
        WebAppName: $(appName)
        ResourceGroupName: $(resourceGroupName)
        SourceSlot: staging
        SwapWithProduction: true